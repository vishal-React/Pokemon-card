* {
  margin: 0px;
  padding: 0px;
  text-transform: capitalize;
  font-family: "Urbanist", sans-serif;
}

body {
  background-color: #f0f3ff;
}

/* input */

.pokemon-hunt-heading {
  font-family: "Pokemon", sans-serif; /* Add a fun Pok√©mon-style font (you can use Google Fonts or a custom one) */
  font-weight: bold;
  color: #1c1717; 
  text-transform: uppercase; 
  letter-spacing: 5px; 
  text-shadow: 3px 3px 8px rgba(0, 0, 0, 0.3); /* Add shadow to make text pop */
  animation: fadeIn 1.5s ease-out;
}

/* Optional: Add some bouncing or text animation */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(-30px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.main,
.int {
  display: flex;
  justify-content: center;
  padding-top: 15px;
  animation: fadeIn 1.5s ease;
}

input {
  outline: none;
  border: 1px solid black;
  border: none;
  padding: 7px 15px;
  font-size: large;
  box-shadow: rgba(0, 0, 0, 0.5) 0px 3px 8px;
  transition: transform 0.3s ease;

  &&:hover {
    transform: scale(1.07);
  }
}

/* CARD START  */

.all {
  padding-top: 20px;
  display: flex;
  justify-content: center;
  animation: fadeIn 1.5s ease-out;
}

.card1 {
  display: grid;
  grid-template-columns: repeat(4, 240px);
  gap: 20px;
}

.card {
  background-color: #fdfdfd;
  box-shadow: rgba(88, 88, 88, 0.25) 0px 54px 55px,
    rgba(0, 0, 0, 0.12) 0px -12px 30px, rgba(0, 0, 0, 0.12) 0px 4px 6px,
    rgba(0, 0, 0, 0.17) 0px 12px 13px, rgba(0, 0, 0, 0.09) 0px -3px 5px;
  text-align: center;
  padding: 10px;
  z-index: 1;
  position: relative;
  transition: transform 0.3s ease;

  &&:hover {
    transform: scale(1.08);
  }
}

.card:hover .shape {
  clip-path: circle(50% at 50% 0);
  transition: transform 0.3s ease;
}

.shape {
  height: 225px;
  width: 225px;
  background-color: #e7f8ed;
  clip-path: ellipse(50% 25% at 50% 25%);
  position: absolute;
  z-index: -1;
  transition: transform 0.3s ease;
}

.name {
  padding-top: 10px;
  padding-bottom: 10px;
  pointer-events: none;
}

.type {
  border-radius: 20px;
  padding: 3px 17px 5px 17px;
  color: white;
  background-color: #2fc96f;
  pointer-events: none;
}

/* details */

.power {
  padding-top: 25px;
  display: flex;
  justify-content: center;
  gap: 18px;
  font-size: 12px;
  pointer-events: none;
}

.pow {
  gap: 25px;
  padding-bottom: 15px;
}

h5 {
  display: flex;
  font-size: 12px;
}

pre {
  font-size: 12px;
  font-weight: lighter;
}

/* loading text  */
.load {
  display: flex;
  justify-content: center;
  align-items: center;
  padding-top: 15px;
  padding-bottom: 105px;
}

.text {
  color: black;
  font-weight: bolder;
}

@keyframes letter {
  0% {
    font-size: 30px;
  }

  50% {
    font-size: 40px;
  }

  100% {
    font-size: 30px;
  }
}

.letter {
  animation: letter 1s infinite;
}

.letter1 {
  animation-delay: 0s;
}

.letter2 {
  animation-delay: -0.9s;
}

.letter3 {
  animation-delay: -0.8s;
}

.letter4 {
  animation-delay: -0.7s;
}

.letter5 {
  animation-delay: -0.6s;
}

.letter6 {
  animation-delay: -0.5s;
}

.letter7 {
  animation-delay: -0.4s;
}

.letter8 {
  animation-delay: -0.3s;
}

.letter9 {
  animation-delay: -0.2s;
}

.letter10 {
  animation-delay: -0.1s;
}

/* loader poke ball  */
.pok-ball {
  display: flex;
  justify-content: center;
}

.loader {
  height: 250px;
  aspect-ratio: 1;
  position: relative;
}

.loader::before,
.loader::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 50%;
  transform-origin: bottom;
}

.loader::after {
  background: radial-gradient(at 75% 15%, #fffb, #0000 35%),
    radial-gradient(at 80% 40%, #0000, #0008),
    radial-gradient(circle 5px, #fff 94%, #0000),
    radial-gradient(circle 10px, #000 94%, #0000),
    linear-gradient(#f93318 0 0) top / 100% calc(50% - 5px),
    linear-gradient(#fff 0 0) bottom/100% calc(50% - 5px) #000;
  background-repeat: no-repeat;
  animation: l20 1s infinite cubic-bezier(0.5, 120, 0.5, -120);
}

.loader::before {
  background: #ddd;
  filter: blur(8px);
  transform: scaleY(0.4) translate(-13px, 0px);
}

@keyframes l20 {
  30%,
  70% {
    transform: rotate(0deg);
  }

  49.99% {
    transform: rotate(0.2deg);
  }

  50% {
    transform: rotate(-0.2deg);
  }
}


